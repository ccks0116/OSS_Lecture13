// project.cpp : 콘솔 응용 프로그램에 대한 진입점을 정의합니다.
//

#include "stdafx.h"
#include "stdlib.h"
#include "windows.h"
#include "time.h"
#include "conio.h" //_kbhit(),getch()를 사용하기위한 헤더파일

void elpTime();
void pTime();
void keyListener();

int c = 0; //clock()로 받은 값을 저장
int m = 0, h = 0; // 분, 시
int state = NULL; // 키입력 상태
int endProgram = 1; //프로그램 종료

#define ESC 27

int main()
{
	system("mode con:cols=20 lines=5");// con:cols=50 : 가로 길 lines=20 : 세로 길
	
	while (endProgram) {
		system("cls");
		keyListener();
		elpTime();
		pTime();
		printf("0 도움말, ESC 종료.\n");		
		Sleep(50);

	}

	system("pause");
	return 0;
}

void elpTime() {		//elapse time 경과시간
	c = clock() / 10; //clock()는 1/1000초를 반환하므로 1초로 단위 변경
	m = (c / 60) % 60;
	h = c / 3600;

	printf("경과시간 %.2d:%.2d\n", h, m);

}

void pTime() {	//present time 현재시간
	struct tm *t;
	time_t timer;
	timer = time(NULL);
	t = localtime(&timer);
	printf("현재시간 %.2d:%.2d\n", t->tm_hour, t->tm_min);
}

void keyListener() {
	if (_kbhit() != 0) //키보드 버퍼값이 있으면 반복문을 빠져나옴
	{
		state = getch();
		switch (state) {
		case ESC:
			printf("5초후 종료합니다.\n");
			Sleep(5000);
			endProgram = 0;
			break;
		case '0':
			system("mode con:cols=30 lines=20");
			printf("1. 알람시간 설정\n2. 뽀모도르 시간관리\n3. 메세지 알람\nESC. 이전\n");
			state = getch();
			switch (state) {
			case ESC:
				break;
			case '1':
				//setAlarm();
				break;
			case '2':
				//pomodoro();
				break;
			case '3':
				//messgeAlarm();
				break;
			}
			system("mode con:cols=20 lines=5");
			break;
		}
	}
		
}